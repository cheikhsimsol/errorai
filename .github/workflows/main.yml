name: Build and Release Go Binary

on:
  workflow_dispatch:

jobs:
  build_and_release:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        config:
          - os: ubuntu-latest
            goos: linux
          - os: windows-latest
            goos: windows
          - os: macos-latest
            goos: darwin
        go-version: [1.23]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}

      - name: Install dependencies
        run: |
          go mod tidy

      - name: Build Go binary
        env:
          CGO_ENABLED: 0
        run: |
          OUTPUT_NAME="errorai-${{ matrix.config.goos }}-${{ matrix.go-version }}"
          if [ "${{ matrix.config.goos }}" = "windows" ]; then
            OUTPUT_NAME="$OUTPUT_NAME.exe"
          fi
          GOOS=${{ matrix.config.goos }} GOARCH=amd64 go build -ldflags="-s -w" -o $OUTPUT_NAME .

      - name: Define dynamic version tag
        id: define_version
        run: |
          # Construct the version tag dynamically
          TIMESTAMP=$(date +%s)
          VERSION_TAG="v1.${TIMESTAMP}-${{ matrix.config.goos }}-${{ matrix.go-version }}"
          echo "Using dynamic version: $VERSION_TAG"
          echo "version_tag=$VERSION_TAG" >> $GITHUB_ENV

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.version_tag }}
          release_name: Release ${{ env.version_tag }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          for file in errorai-*; do
            echo "Uploading $file"
            gh release upload ${{ env.version_tag }} "$file" --clobber
          done
