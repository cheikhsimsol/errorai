name: Build and Release Go Binary

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        config:
          - os: ubuntu-latest
            goos: linux
          - os: windows-latest
            goos: windows
          - os: macos-latest
            goos: darwin
        go-version: [1.23]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}

      - name: Install dependencies
        run: |
          go mod tidy

      - name: Build Go binary
        env:
          CGO_ENABLED: 0
        run: |
          GOOS=${{ matrix.config.goos }} GOARCH=amd64 go build -ldflags="-s -w" -o errorai-${{ matrix.config.goos }}-${{ matrix.go-version }} .

      - name: Archive binary as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: errorai-${{ matrix.config.goos }}-${{ matrix.go-version }}
          path: errorai-${{ matrix.config.goos }}-${{ matrix.go-version }}

      - name: Download built artifact
        uses: actions/download-artifact@v3
        with:
          path: artifacts/

      - name: Verify downloaded artifact
        run: |
          echo "Artifacts downloaded:"
          ls -l artifacts/

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Define fixed tag name
        id: define_version
        run: |
          # Define the fixed version tag
          VERSION_TAG="v1.6.13"  # Change this to the desired fixed tag
          echo "Using fixed version: $VERSION_TAG"
          echo "version_tag=$VERSION_TAG" >> $GITHUB_ENV

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.version_tag }}
          release_name: Release ${{ env.version_tag }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          for file in artifacts/*/*; do
            echo "Uploading $file"
            gh release upload ${{ env.version_tag }} "$file" --clobber
          done
